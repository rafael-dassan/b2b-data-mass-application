trigger:
  - master

pool:
  vmImage: 'ubuntu-20.04'

name: $(Date:yyyyMMdd)-$(Rev:r)

variables:
- group: BEES-GoldenCICD-Microservice-vg

parameters:
- name: goldenCICDRepo
  default: templates

- name: sonarScan
  default: ""

- name: sonarBuildBreaker
  default: ""

- name: sonarConnection
  default: $(SonarB2BServiceConnection)

- name: sonarConfigFile
  default: "sonar-project.properties"

- name: sonarSources
  default: ""

- name: sonarExtraProperties
  default: ""

- name: sonarMode
  default: "cloud" 

resources:
  repositories:
  - repository: templates
    type: git
    name: GHQ_B2B_Delta/golden-CICD-library
    ref: master

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
- script: |
    pip3 install .
  displayName: 'Install dependencies'
- script: |
    export USER_EMAIL='data.mass@ab-inbev.com' && python3 -m data_mass.populate do uat test
  displayName: 'Run tests'
  condition: eq(variables['Build.Reason'], 'PullRequest')

- task: Docker@2
  displayName: "Build and push master branch"
  inputs:
    containerRegistry: 'Azure-Container-Registry-NonPROD-b2bgbacrint'
    repository: 'b2b-data-mass-application'
    Dockerfile: Dockerfile
    buildContext: ./
    tags: |
      latest
      $(build.buildNumber)
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

- task: Docker@2
  displayName: "Build and push development branch"
  inputs:
    containerRegistry: 'Azure-Container-Registry-NonPROD-b2bgbacrint'
    repository: 'b2b-data-mass-application'
    Dockerfile: Dockerfile
    buildContext: ./
    tags: dev-$(build.buildNumber)
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- template: /shared/tasks/sonarqube_prepare.yml@templates
  parameters:
    sonarConnection: ${{ parameters.sonarConnection }}
    sonarConfigFile: ${{ parameters.sonarConfigFile }}
    sonarMode: ${{ parameters.sonarMode }}
    sonarProjectKey: ""
    sonarProjectName: ""
    sonarSources: ${{ parameters.sonarSources }}
    sonarExtraProperties: ${{ parameters.sonarExtraProperties }}

- template: /shared/tasks/sonarqube_analyze.yml@templates
  parameters:
    sonarMode: ${{ parameters.sonarMode }}

- template: /shared/tasks/sonarqube_publish.yml@templates
  parameters:
    sonarMode: ${{ parameters.sonarMode }}
    pollingTimeoutSec: "300"
